{"version":3,"sources":["utils/formatNumberString.js","components/AttributesChart/AttributesChart.js","components/AttributesTable/AttributesTable.js","components/Pagination/Pagination.js","App.js","utils/createChartData.js","reportWebVitals.js","index.js"],"names":["formatNumberString","input","inputAsNumber","Number","isNaN","toLocaleString","AttributesChart","_ref","chartData","attribute","react_default","a","createElement","className","BarChart","width","height","data","margin","right","CartesianGrid","strokeDasharray","YAxis","type","dataKey","tickFormatter","interval","allowDataOverflow","XAxis","angle","dy","Tooltip","formatter","Bar","fill","AttributesTable","planets","map","planet","index","name","population","rotation_period","orbital_period","diameter","climate","surface_water","key","concat","renderRow","renderPlanets","Pagination","props","pageCount","currentPage","setPage","renderPageButton","num","classNames","onClick","disabled","color","xmlns","viewBox","d","points","renderBackwardArrow","pages","i","push","renderPages","renderForwardArrow","App","_useState","useState","_useState2","Object","slicedToArray","setPlanets","_useState3","_useState4","page","_useState5","_useState6","setAttribute","useEffect","asyncToGenerator","regenerator_default","mark","_callee","API_URL","response","sortedPlanets","wrap","_context","prev","next","fetch","sent","ok","Error","status","json","results","sort","b","localeCompare","stop","apply","this","arguments","fetchData","item","createChartData","Fragment","htmlFor","id","value","onChange","event","target","components_AttributesChart_AttributesChart","components_AttributesTable_AttributesTable","components_Pagination_Pagination","renderDashboard","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3f1bbe4e.chunk.js","sourcesContent":["export function formatNumberString(input) {\n  const inputAsNumber = Number(input);\n  if (inputAsNumber === -1)\n    return \"unknown\";\n  if (isNaN(inputAsNumber) === false)\n    return Number(input).toLocaleString();\n  return input;\n}","import React from 'react';\nimport './AttributesChart.css';\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { formatNumberString } from \"../../utils/formatNumberString\";\n\nfunction AttributesChart({chartData, attribute}) {\n  return (\n    <div className=\"AttributesChart\">\n      <BarChart\n        width={800}\n        height={250}\n        data={chartData}\n        margin={{right: 75}}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <YAxis\n          type=\"number\"\n          width={145}\n          dataKey={attribute}\n          tickFormatter={formatNumberString}\n          interval=\"preserveStart\"\n          allowDataOverflow\n        />\n        <XAxis\n          type=\"category\"\n          height={60}\n          dataKey=\"name\"\n          interval={0}\n          angle={30}\n          dy={15}\n        />\n        <Tooltip formatter={formatNumberString}/>\n        <Bar\n          dataKey={attribute}\n          fill=\"#42a5f5\"\n        />\n      </BarChart>\n    </div>\n  );\n}\n  \nexport default AttributesChart;\n  ","import React from 'react';\nimport './AttributesTable.css';\nimport { formatNumberString } from \"../../utils/formatNumberString\";\n\nfunction AttributesTable({planets}) {\n  const renderHeader = () => {\n    return (\n      <tr>\n        <th className=\"left\">Name</th>\n        <th>Population</th>\n        <th>Rotation Period</th>\n        <th>Orbital Period</th>\n        <th>Diameter</th>\n        <th>Climate</th>\n        <th>Surface Water</th>\n      </tr>\n    );\n  };\n\n  const renderRow = (planet, index) => {\n    const {\n      name,\n      population,\n      rotation_period,\n      orbital_period,\n      diameter,\n      climate,\n      surface_water,\n    } = planet;\n\n    return (\n      <tr key={`planet-${index}`}>\n        <td className=\"left\">{name}</td>\n        <td>{formatNumberString(population)}</td>\n        <td>{formatNumberString(rotation_period)}</td>\n        <td>{formatNumberString(orbital_period)}</td>\n        <td>{formatNumberString(diameter)}</td>\n        <td>{climate}</td>\n        <td>{formatNumberString(surface_water)}</td>\n      </tr>\n    );\n  };\n\n  const renderPlanets = (planets) => {\n    return planets.map((planet, index) => renderRow(planet, index));\n  };\n\n  return (\n    <table className=\"AttributesTable\">\n      <thead>\n        {renderHeader()}\n      </thead>\n      <tbody className=\"TableBody\">\n        {renderPlanets(planets)}\n      </tbody>\n    </table>\n  );\n}\n\nexport default AttributesTable;\n","import React from 'react';\nimport './Pagination.css';\n\nfunction Pagination(props) {\n  const { pageCount, currentPage, setPage } = props;\n\n  const renderPageButton = (num) => {\n    const classNames = num === currentPage ? \"PageButton selected\" : \"PageButton\";\n    return (\n      <button\n        key={num}\n        className={classNames}\n        onClick={() => setPage(num)}\n      >\n        {num}\n      </button>\n    );\n  };\n\n  const renderPages = () => {\n    const pages = [];\n    for (let i = 1; i <= pageCount; i++) {\n      pages.push(renderPageButton(i));\n    }\n    return pages;\n  };\n\n  const renderBackwardArrow = () => {\n    const disabled = currentPage === 1;\n    const color = disabled ? \"#bfbfbf\" : \"#141414\";\n    return (\n      <button\n        className=\"BackButton\"\n        onClick={() => setPage(currentPage-1)}\n        disabled={disabled}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16px\" viewBox=\"0 0 24 24\" width=\"16px\" fill={color}><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\"/></g></svg>\n      </button>\n    );\n  };\n\n  const renderForwardArrow = () => {\n    const disabled = currentPage === pageCount;\n    const color = disabled ? \"#bfbfbf\" : \"#141414\";\n    return (\n      <button\n        className=\"NextButton\"\n        onClick={() => setPage(currentPage+1)}\n        disabled={disabled}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16px\" viewBox=\"0 0 24 24\" width=\"16px\" fill={color}><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\"/></g></svg>\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"Pagination\">\n      {renderBackwardArrow()}\n      {renderPages()}\n      {renderForwardArrow()}\n    </div>\n  );\n}\n\nexport default Pagination;\n  ","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AttributesChart from \"./components/AttributesChart/AttributesChart\";\nimport AttributesTable from \"./components/AttributesTable/AttributesTable\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport { createChartData } from \"./utils/createChartData\";\n\nfunction App() {\n  const [planets, setPlanets] = useState(null);\n  const [page, setPage] = useState(1);\n  const [attribute, setAttribute] = useState(\"population\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const API_URL = `https://swapi.dev/api/planets/?page=${page}`;\n      const response = await fetch(API_URL);\n      if (!response.ok) {\n        throw new Error(`Unable to fetch data. ${response.status}`);\n      }\n\n      const data = await response.json();\n      const sortedPlanets = data.results.sort((a, b) => (a.name).localeCompare(b.name));\n      setPlanets(sortedPlanets);\n    };\n\n    fetchData();\n  }, [page]);\n\n  const renderAttributeSelect = () => {\n    return (\n      <div className=\"AttributeSelect\">\n        <label htmlFor=\"attributeSelect\">Planet Attribute</label>\n        <select\n          name=\"attributeSelect\"\n          id=\"attributeSelect\"\n          value={attribute}\n          onChange={(event) => setAttribute(event.target.value)}\n        >\n          <option value=\"population\">Population</option>\n          <option value=\"rotation_period\">Rotation Period</option>\n          <option value=\"orbital_period\">Orbital Period</option>\n          <option value=\"diameter\">Diameter</option>\n          <option value=\"surface_water\">Surface Water</option>\n        </select>\n      </div>\n    );\n  };\n\n  const renderDashboard = () => {\n    if (!planets) return;\n\n    const chartData = createChartData(planets, attribute);\n    return (\n      <>\n        {renderAttributeSelect()}\n        <AttributesChart attribute={attribute} chartData={chartData} />\n        <AttributesTable planets={planets} />\n        <Pagination pageCount={6} currentPage={page} setPage={setPage} />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {renderDashboard()}\n    </div>\n  );\n}\n\nexport default App;\n","export function createChartData(planets, attribute) {\n  return planets.map((planet) => {\n    let item = {};\n    item.name = planet.name;\n    item[attribute] = planet[attribute] === \"unknown\" ? -1 : Number(planet[attribute]);\n    return item;\n  });\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\nreportWebVitals();\n"],"sourceRoot":""}